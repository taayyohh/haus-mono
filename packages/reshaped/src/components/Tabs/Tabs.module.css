.root {
  position: relative;
  box-sizing: initial;

  /* 
	Make sure that tab is not stretching the flex container when is in the middle of other flex children
	Example is available in View.stories 
	*/
  max-width: 100%;
}

.list {
  position: relative;
}

.inner::after {
  content: '';
  position: absolute;
  background-color: var(--rs-color-border-neutral-faded);
  z-index: 2;
}

.item {
  --rs-tabs-gap: var(--rs-unit-x4);

  flex-shrink: 0;
  position: relative;
}

.button {
  width: 100%;

  /* 
	Keep transform working with absolute positioned elements
	Without z-index actionable goes behind them
	*/
  z-index: 1;
  position: relative;
  overflow: hidden;

  /* Highlighting causes background animation to get cut off */
  -webkit-tap-highlight-color: transparent;
  border-radius: var(--rs-unit-radius-medium);
}

.buttonContent {
  width: 100%;
  display: flex;
  align-items: center;
  box-sizing: border-box;
  border-radius: var(--rs-unit-radius-medium);

  &:hover {
    color: var(--rs-color-foreground-neutral-faded);
  }
}

.buttonContent,
.icon {
  color: inherit;
  transition: color var(--rs-duration-fast) var(--rs-easing-standard);
}

[data-rs-keyboard] .radio:focus + .buttonContent {
  box-shadow: var(--rs-focus-inset-shadow);
}

.icon:not(:last-child) {
  margin-inline-end: var(--rs-unit-x2);
}

.--item-active::after {
  content: '';
}

.--item-active::after,
.selector {
  position: absolute;
  border-radius: calc(var(--rs-unit-radius-medium) - 1px);
  background: var(--rs-color-border-primary);
  z-index: var(--rs-z-index-raised);
}

.selector {
  --rs-tab-selection-x: 0;
  --rs-tab-selection-y: 0;
  --rs-tab-selection-scale-x: 0;
  --rs-tab-selection-scale-y: 0;

  transform-origin: 0 0;
  transform: translate(
      calc(var(--rs-tab-selection-x) * 1px),
      calc(var(--rs-tab-selection-y) * 1px)
    )
    translateZ(0);
}

.--selector-hidden {
  visibility: hidden;
}

.--selector-animated {
  transition: var(--rs-duration-medium) var(--rs-easing-decelerate);
  transition-property: transform, width, height;
}

.next,
.prev {
  position: absolute;
  inset-block: 0;
  display: flex;
  align-items: center;
  z-index: var(--rs-z-index-raised);

  [dir='rtl'] & {
    transform: scaleX(-1);
  }
}

.next {
  inset-inline-end: var(--rs-unit-x1);
}

.prev {
  inset-inline-start: var(--rs-unit-x1);
}

.panel {
  outline: none;
}

[data-rs-keyboard] .panel:focus {
  box-shadow: var(--rs-focus-shadow);
}

.--panel-hidden {
  display: none;
}

.--direction-row {
  /* We're using negative margins here to avoid button focus outline being cut off with overflow: hidden */
  margin: 0 calc(var(--rs-unit-x2) * -1);
  padding: 0 var(--rs-unit-x2);
  overflow: hidden;

  & .inner {
    white-space: nowrap;
    overflow: auto;

    /* 1 */
    margin: 0 calc(var(--rs-unit-x2) * -1) -40px;
    padding: 0 var(--rs-unit-x2) 40px;
    -ms-overflow-style: none;
    /* stylelint-disable-next-line declaration-block-no-duplicate-properties */
    overflow: -moz-scrollbars-none;
    scrollbar-width: none;
  }

  & .inner::-webkit-scrollbar {
    display: none;
  }

  & .inner::after {
    height: 1px;

    /* 1 */
    inset-inline: var(--rs-unit-x2);
    bottom: 0;
  }

  & .list {
    display: inline-flex;
    vertical-align: top;
    flex-wrap: nowrap;
    align-items: center;
  }

  & .item + .item {
    margin-inline-start: var(--rs-tabs-gap);
  }

  & .--item-active::after {
    inset-inline: 0;
    height: 2px;
    bottom: 0;
  }

  & .selector {
    left: 0;
    height: 2px;
    bottom: 0;
    width: calc(var(--rs-tab-selection-scale-x) * 1px);
  }

  & .button {
    /* 1 */
    margin: var(--rs-unit-x1) calc(var(--rs-unit-x2) * -1);
    padding: 0 var(--rs-unit-x2);
    box-sizing: initial;
  }

  & .buttonContent {
    justify-content: center;
    padding: var(--rs-tabs-item-p-v) 0;
  }
}

.--direction-column {
  & .inner::after {
    inset-inline-end: 0;
    top: 0;
    bottom: 0;
    height: 100%;
    width: 1px;
  }

  & .list {
    display: flex;
    flex-direction: column;
  }

  & .item {
    --rs-tabs-gap: var(--rs-unit-x1);

    padding-inline-end: var(--rs-unit-x1);
  }

  & .item + .item {
    margin-top: var(--rs-tabs-gap);
  }

  & .--item-active::after {
    bottom: 0;
  }

  & .--item-active::after,
  & .selector {
    width: 2px;
    height: 100%;
    inset-inline-end: 0;
  }

  & .selector {
    top: 0;
    height: calc(var(--rs-tab-selection-scale-y) * 1px);
  }

  & .button {
    padding: var(--rs-unit-x2);
    margin-inline-start: calc(var(--rs-unit-x2) * -1);
    width: calc(100% + var(--rs-unit-x1));
  }

  & .buttonContent {
    justify-content: flex-start;
  }
}

.--variant-borderless .inner::after,
.--variant-pills .inner::after,
.--variant-pills-elevated .inner::after {
  content: none;
}

.--variant-pills .button,
.--variant-pills-elevated .button {
  margin: 0;
  padding: 0;
}

.--variant-pills .buttonContent,
.--variant-pills-elevated .buttonContent {
  margin: 0;
  padding: var(--rs-tabs-item-p-v) var(--rs-tabs-item-p-h);

  &:hover {
    background: none;
  }
}

.--variant-pills .item,
.--variant-pills-elevated .item {
  --rs-tabs-gap: var(--rs-unit-x1);
}

.--variant-pills .selector,
.--variant-pills-elevated .selector {
  background-color: var(--rs-color-background-neutral);
  opacity: 0.6;
  z-index: 0;
  width: calc(var(--rs-tab-selection-scale-x) * 1px);
  height: calc(var(--rs-tab-selection-scale-y) * 1px);

  .--direction-column& {
    left: 0;
  }

  .--direction-row& {
    top: 0;
  }
}

.--variant-pills .--item-active::after,
.--variant-pills-elevated .--item-active::after {
  background-color: var(--rs-color-background-neutral);
  opacity: 0.6;
  z-index: 0;

  .--direction-column& {
    width: 100%;
  }

  .--direction-row& {
    height: 100%;
  }
}

.--variant-pills-elevated .list {
  border-radius: var(--rs-unit-radius-medium);
  background: var(--rs-color-background-neutral-faded);
  border: 2px solid transparent;
}

.--variant-pills-elevated .--item-active::after,
.--variant-pills-elevated .selector {
  opacity: 1;
  background: var(--rs-color-background-elevation-raised);
  box-shadow: var(--rs-shadow-raised);
  box-sizing: border-box;
}

.--size-medium {
  --rs-tabs-item-p-v: var(--rs-unit-x2);
  --rs-tabs-item-p-h: var(--rs-unit-x3);
}

.--size-large {
  --rs-tabs-item-p-v: var(--rs-unit-x3);
  --rs-tabs-item-p-h: var(--rs-unit-x4);
}

.--item-width-equal {
  max-width: none;
}

.--item-width-equal .inner {
  flex-wrap: wrap;
  overflow: hidden;
}

.--item-width-equal .list {
  display: flex;
}

.--item-width-equal .item {
  flex-grow: 1;
  flex-basis: 0;
  margin: 0;
}

[dir='rtl'] .--cut-off-start .inner,
.--cut-off-end .inner {
  mask-image: linear-gradient(
    to right,
    rgba(var(--rs-color-rgb-black), 100%) 0,
    rgba(var(--rs-color-rgb-black), 100%) 80%,
    rgba(var(--rs-color-rgb-black), 10%) 95%,
    rgba(var(--rs-color-rgb-black), 0%) 100%
  );
}

[dir='rtl'] .--cut-off-end .inner,
.--cut-off-start .inner {
  mask-image: linear-gradient(
    to left,
    rgba(var(--rs-color-rgb-black), 100%) 0,
    rgba(var(--rs-color-rgb-black), 100%) 80%,
    rgba(var(--rs-color-rgb-black), 10%) 95%,
    rgba(var(--rs-color-rgb-black), 0%) 100%
  );
}

.--cut-off-both .inner {
  mask-image: linear-gradient(
    to right,
    rgba(var(--rs-color-rgb-black), 0%) 0,
    rgba(var(--rs-color-rgb-black), 10%) 5%,
    rgba(var(--rs-color-rgb-black), 100%) 20%,
    rgba(var(--rs-color-rgb-black), 100%) 80%,
    rgba(var(--rs-color-rgb-black), 10%) 95%,
    rgba(var(--rs-color-rgb-black), 0%) 100%
  );
}

@media (--rs-viewport-s) {
  .next,
  .prev {
    display: none;
  }
}
